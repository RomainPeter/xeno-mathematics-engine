name: CI
on: [push, pull_request]
jobs:
  pre-commit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: true
      - name: Set up Git credentials for private fetches
        run: |
          git config --global url."https://${{ secrets.GITHUB_TOKEN }}:x-oauth-basic@github.com/".insteadOf "https://github.com/"
      - uses: cachix/install-nix-action@v27
      - run: nix develop -c pre-commit run -a
  pytest:
    runs-on: ubuntu-latest
    needs: pre-commit
    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v27
      - run: nix develop -c python -m pip install -e .
      - run: nix develop -c pytest -q
  build-cli:
    runs-on: ubuntu-latest
    needs: pytest
    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v27
      - run: nix build .#xme && ls -l result/
  sbom:
    runs-on: ubuntu-latest
    needs: build-cli
    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v27
      - run: nix develop -c bash -lc 'mkdir -p sbom && syft dir:. -o spdx-json > sbom/sbom.spdx.json'
      - uses: actions/upload-artifact@v4
        with: { name: sbom, path: sbom/sbom.spdx.json }
  docker-build:
    runs-on: ubuntu-latest
    needs: build-cli
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - uses: docker/build-push-action@v6
        with: { context: ., push: false, tags: xme/dev:latest }
  verify-2cat:
    runs-on: ubuntu-latest
    needs: build-cli
    continue-on-error: true
    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v27
      - name: Install minisign
        run: nix develop -c bash -lc 'nix-shell -p minisign --run "minisign --version"'
      - name: Verify 2cat pack (non-blocking)
        env:
          FORCE_VERIFY_2CAT: "0"
        run: nix develop -c bash -lc 'bash scripts/verify_2cat_pack.sh'
  pack-smoke:
    runs-on: ubuntu-latest
    needs: [pytest]
    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v27
      - name: Install dependencies
        run: nix develop -c python -m pip install -e .
      - name: Create test artifacts
        run: |
          mkdir -p artifacts/psp artifacts/pcap
          echo '{"blocks": [], "edges": [], "meta": {"theorem": "test"}}' > artifacts/psp/test.psp.json
          echo '{"type": "action", "action": "test", "timestamp": "2024-01-01T00:00:00Z"}' > artifacts/pcap/run-test.jsonl
      - name: Build Audit Pack
        run: nix develop -c xme pack build --out dist/
      - name: Verify Audit Pack
        run: nix develop -c xme pack verify --pack "$(ls -1t dist/pack-*.zip | head -1)"
      - name: Upload pack artifact
        uses: actions/upload-artifact@v4
        with:
          name: audit-pack
          path: dist/pack-*.zip
  attest:
    runs-on: ubuntu-latest
    needs: [docker-build, sbom]
    if: ${{ secrets.COSIGN_KEY != '' }}
    steps:
      - uses: actions/checkout@v4
      - uses: sigstore/cosign-installer@v3
      - name: Download SBOM artifact
        uses: actions/download-artifact@v4
        with:
          name: sbom
          path: sbom/
      - name: Attest SBOM with cosign
        env:
          COSIGN_KEY: ${{ secrets.COSIGN_KEY }}
        run: |
          cosign attest --predicate sbom/sbom.spdx.json --key <(echo "$COSIGN_KEY") xme/dev:latest
      - name: Upload attestation artifact
        uses: actions/upload-artifact@v4
        with:
          name: attestation
          path: sbom/sbom.spdx.json